### Vim8 compatibility ###{{{
[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'
# }}}

### Dark Powerd ###{{{
[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = "source ~/.vim/rc/plugins/denite.rc.vim"
hook_add = '''
    " The prefix key.
    nnoremap    [denite]   <Nop>
    nmap        <Space>d [denite]
    " denite.vim keymap
    nnoremap <silent> [denite]l :<C-u>Denite<Space>buffer<CR>
    nnoremap <silent> <Space><Space> :<C-u>Denite<Space>buffer<CR>
    nnoremap <silent> [denite]o :<C-u>Denite<Space>outline<CR>
    nnoremap <silent> <Space>/ :<C-u>DeniteProjectDir<Space>grep<CR>

    " C-n / C-p to move
    call denite#custom#map('insert', "<C-n>", '<denite:move_to_next_line>')
    call denite#custom#map('insert', "<C-p>", '<denite:move_to_previous_line>')

    call denite#custom#map('insert', "<C-t>", '<denite:do_action:tabopen>')
    call denite#custom#map('insert', "<C-v>", '<denite:do_action:vsplit>')
    call denite#custom#map('normal', "v", '<denite:do_action:vsplit>')

    call denite#custom#map('insert', 'jj', '<denite:enter_mode:normal>')

'''
hook_post_source = '''
    call denite#custom#var('file_rec', 'command', ['rg', '--follow', '--nocolor', '--nogroup', '-g', ''])
    call denite#custom#var('grep', 'command', ['rg'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', [])
    call denite#custom#var('grep', 'default_opts', ['--follow', '--no-group', '--no-color'])
'''
[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'
# }}}

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = "source ~/.vim/rc/plugins/lightline.rc.vim"

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_sign_column_always = 1
let g:ale_statusline_format = [" %d", " %d", "⬥ ok"]
'''

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_add = '''
    set hidden
    set hidden
    let g:LanguageClient_serverCommands = {
        \ 'vue': ['vls'],
        \ 'html': [],
        \ 'css': [],
        \ 'javascript': ['javascript-typescript-stdio'],
        \ 'c': ['cquery', 
        \ '--log-file=/tmp/cq.log', 
        \ '--init={"cacheDirectory":"/var/cquery/"}'],
        \ 'cpp': ['cquery', 
        \ '--log-file=/tmp/cq.log', 
        \ '--init={"cacheDirectory":"/var/cquery/"}']
        \ }
    nnoremap <silent> K :call LanguageClient_textDocument_hover()<CR>
    nnoremap <silent> gd :call LanguageClient_textDocument_definition()<CR>
    nnoremap <silent> <F2> :call LanguageClient_textDocument_rename()<CR>
    " not stop completion $ & /
    setlocal iskeyword+=$
    setlocal iskeyword+=-
'''

[[plugins]]
repo = 'machakann/vim-sandwich'
hook_add = '''
    runtime macros/sandwich/keymap/surround.vim
    xmap is <Plug>(textobj-sandwich-query-i)
    xmap as <Plug>(textobj-sandwich-query-a)
    omap is <Plug>(textobj-sandwich-query-i)
    omap as <Plug>(textobj-sandwich-query-a)
    xmap iss <Plug>(textobj-sandwich-auto-i)
    xmap ass <Plug>(textobj-sandwich-auto-a)
    omap iss <Plug>(textobj-sandwich-auto-i)
    omap ass <Plug>(textobj-sandwich-auto-a)
'''

[[plugins]]
repo = 'tyru/caw.vim'

[[plugins]]
repo = 'thinca/vim-zenspace'
hook_add = '''
augroup vimrc-highlight
  autocmd!
  autocmd ColorScheme * highlight ZenSpace ctermbg=52 guibg=#5f0000
augroup END
'''

[[plugins]]
repo = 'deton/jasegment.vim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo ="nelstrom/vim-visual-star-search"

[[plugins]]
repo = "sheerun/vim-polyglot"

[[plugins]]
repo = "Yggdroot/indentLine"
hook_add = '''
let g:indentLine_char = '⎸'
let g:indentLine_color_term = 0
let g:indentLine_bgcolor_term = "NONE"
let g:indentLine_color_gui = '#3b4252'
let g:indentLine_bgcolor_gui = 'NONE'

'''

### Colorschemes ###{{{

[[plugins]]
repo = 'arcticicestudio/nord-vim'
hook_add = '''
let g:nord_uniform_diff_background = 0
'''

[[plugins]]
repo = 'tpozzi/Sidonia'
# }}}

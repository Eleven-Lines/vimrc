### Dark Powerd ###{{{
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
on_source = ["zchee/deoplete-jedi", "achee/deoplete-clang", 'carlitux/deoplete-ternjs']
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#auto_complete_start_length = 1
    let g:deoplete#enable_camel_case = 0
    let g:deoplete#enable_ignore_case = 0
    let g:deoplete#enable_refresh_always = 0
    let g:deoplete#enable_smart_case = 1
    let g:deoplete#file#enable_buffer_path = 1
    let g:deoplete#auto_complete_delay = 0
    inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
    autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_source = ['neosnippet.vim']
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet.vim''
on_i = 1
depends = ['neosnippet-snippets']
hook_source = '''
    " Plugin key-mappings.
    " Note: It must be "imap" and "smap".  It uses <Plug> mappings.
    imap <C-k>     <Plug>(neosnippet_expand_or_jump)
    smap <C-k>     <Plug>(neosnippet_expand_or_jump)
    xmap <C-k>     <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp', 'objc', 'objcpp']
depends = ['deoplete.nvim']
hook_source = '''
let g:deoplete#sources#clang#libclang_path = "/usr/local/Cellar/cling/0.5_1/libexec/lib/libclang.dylib"
'''

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c', 'cpp', 'objc', 'objcpp']

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_ft = ['html', 'vue', 'xml', 'markdown']
# }}}

### Editing ###{{{

[[plugins]]
repo = 'scrooloose/nerdtree'
on_cmd = ["NERDTree", "NERDTreeToggle"]

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_i = 1

[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1

[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = "QuickRun"
hook_add = "source ~/.vim/rc/plugins/quickrun.rc.vim"
# }}}

### Python ###{{{

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ["python", "python2", "python3"]
on_source = ["zchee/deoplete-jedi"]

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python', 'python2', 'python3']
depends = ['deoplete.nvim', 'jedi-vim']

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = ["python", "python2", "python3"]

[[plugins]]
repo = 'tmhedberg/SimpylFold'
on_ft = ["python", "python2", "python3"]
# }}}

### markdown ###{{{

# [[plugins]]
# repo = 'godlygeek/tabular'
# on_ft = 'markdown'
#
# [[plugins]]
# repo = 'plasticboy/vim-markdown'
# on_ft = 'markdown'
# hook_source = '''
# hi link htmlItalic CursorLineNr
# hi link htmlBold WarningMsg
# hi link htmlBoldItalic Error
# au FileType markdown setl conceallevel=0
# autocmd MyAutoCmd Filetype markdown hi clear Conceal
# autocmd MyAutoCmd Filetype markdown hi link Conceal texStatement
# let g:vim_markdown_no_default_key_mappings = 1
# let g:vim_markdown_frontmatter = 1
# let g:vim_markdown_toc_autofit = 1
# let g:vim_markdown_folding_disabled = 1
# '''
#
# [[plugins]]
# repo = 'iamcco/mathjax-support-for-mkdp'
# on_ft = 'markdown'
#
# [[plugins]]
# repo = 'iamcco/markdown-preview.vim'
# on_ft = 'markdown'
# }}}

[[plugins]]
repo = 'docunext/closetag.vim'
on_ft = ['html', 'vue', 'xml', 'markdown']

[[plugins]]
repo = 'lervag/vimtex'
on_ft = 'tex'


[[plugins]]
repo = 'basyura/twibill.vim'
on_source = "basyura/TweetVim"

[[plugins]]
repo = 'tyru/open-browser.vim'
on_source = "basyura/TweetVim"

[[plugins]]
repo = 'junegunn/vim-emoji'
on_source = "basyura/TweetVim"

[[plugins]]
repo = 'basyura/TweetVim'
on_cmd = ["TweetVimHomeTimeline", "TweetVimSay"]
depends = ['twibill.vim', 'open-browser.vim', 'vim-emoji']
hook_source = '''
let g:tweetvim_tweet_per_page = 100
let g:tweetvim_display_icon = 1
let g:tweetvim_empty_separator = 1
'''
